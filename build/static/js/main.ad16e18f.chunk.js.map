{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","key","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","className","onClick","e","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"oMAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAKnC,OACE,6BACE,6BACE,+BACE,2BACEC,KAAK,WACLC,QAASH,EAAKI,SACdC,SAXV,WACEJ,EAAWD,EAAKM,OAYTN,EAAKO,QCbD,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACxC,OACEQ,EAAMC,KAAI,SAAAV,GACR,OAAO,kBAACD,EAAD,CAAMY,IAAKX,EAAKM,GAAIL,WAAYA,EAAYD,KAAMA,O,oBCDzDY,G,MAAoB,iBAmDXC,MAjDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNL,EADM,KACCM,EADD,KAEPC,EAAcC,mBAgCpB,OA9BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUhB,MACtD,CAACA,IAwBF,oCACE,kBAACD,EAAD,CAAUC,MAAOA,EAAOR,WAvB5B,SAAoBK,GAClB,IAAMoB,EAAQ,YAAOjB,GACfT,EAAO0B,EAASC,MAAK,SAAA3B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBW,EAASW,MAoBP,2BAAOE,IAAKZ,EAAad,KAAK,SAC9B,4BAAQ2B,UAAU,cAAcC,QAlBpC,SAAuBC,GACrB,IAAMxB,EAAOS,EAAYgB,QAAQC,MACpB,KAAT1B,IACJQ,GAAS,SAAAmB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE5B,GAAI6B,MAAU5B,KAAMA,EAAMH,UAAU,QAE9DY,EAAYgB,QAAQC,MAAQ,QAY1B,YAGA,4BAAQJ,UAAU,cAAcC,QAZpC,WACE,IAAMJ,EAAWjB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAC5CW,EAASW,KAUP,kBAGA,6BAAMjB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAAUiC,OAA3C,iBC/CNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ad16e18f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Todo({ todo, toggleTodo }) {\n  function handleTodoClick() {\n    toggleTodo(todo.id);\n  }\n\n  return (\n    <div>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={todo.complete}\n            onChange={handleTodoClick}\n          />\n          {todo.name}\n        </label>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function TodoList({ todos, toggleTodo }) {\n  return (\n    todos.map(todo => {\n      return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\n    })\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport uuidv4 from 'uuid/v4';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button className=\"btn-warning\" onClick={handleAddTodo}>\n        Add Todo\n      </button>\n      <button className=\"btn-success\" onClick={handleClearTodos}>\n        Clear Complete\n      </button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}